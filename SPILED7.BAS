REM SPI LED Matrix x8 (MAX7219 LED Driver)
REM 64x8 VRAM
REM PACMAN

USEVAR VRAM,D0,D1,D2,D3,D4,D5,D6,D7

SPI 10000,16,0:REM 10MHz/16bit/Mode0

REM Not Test Mode
D=$0F00:SPIWRITE D,D,D,D,D,D,D,D

REM Not Shutdown Mode
D=$0C01:SPIWRITE D,D,D,D,D,D,D,D

REM No Decode Mode
D=$0900:SPIWRITE D,D,D,D,D,D,D,D

REM Set Briteness
D=$0A05:SPIWRITE D,D,D,D,D,D,D,D

REM Scan All LEDs
D=$0B07:SPIWRITE D,D,D,D,D,D,D,D

DIM VRAM(2*8),P(35)
RESTORE FONT
FOR I=0 TO 35:P(I)=READ():NEXT

SYSTEM 200,0:REM Video OFF
C=0:F=0:E=0

REM Main loop
DO
 FOR X=1 TO 7:GOSUB SETP,X*8+3,4:NEXT
 GOSUB SETBMP,16,P+(20+F*2)*4
 FOR X=63 TO 0 STEP -1
  GOSUB SETBMP,X,P+C*8
  GOSUB SETBMP,X+12,P+4*16
  GOSUB SETBMP,X+22,P+4*16
  GOSUB SETBMP,X+32,P+4*16
  GOSUB SETBMP,X+42,P+4*16
  IF E<4 THEN
   GOSUB SETP,3,3:GOSUB SETP,4,3
   GOSUB SETP,3,4:GOSUB SETP,4,4
  ELSE
   GOSUB CLRP,3,3:GOSUB CLRP,4,3
   GOSUB CLRP,3,4:GOSUB CLRP,4,4
  ENDIF
  GOSUB PUTLED
  WAIT 3
  GOSUB CLRBMP,X
  GOSUB CLRBMP,X+12
  GOSUB CLRBMP,X+22
  GOSUB CLRBMP,X+32
  GOSUB CLRBMP,X+42
  C=(C+1)%4:E=(E+1)%8
 NEXT
 FOR X=0 TO 64 STEP 1
  GOSUB SETBMP,X,P+32+C*8
  GOSUB SETBMP,X+12,P+4*18
  GOSUB SETBMP,X+22,P+4*18
  GOSUB SETBMP,X+32,P+4*18
  GOSUB SETBMP,X+42,P+4*18
  GOSUB PUTLED
  WAIT 3
  GOSUB CLRBMP,X
  GOSUB CLRBMP,X+12
  GOSUB CLRBMP,X+22
  GOSUB CLRBMP,X+32
  GOSUB CLRBMP,X+42
  C=(C+1)%4
 NEXT
 F=(F+1)%8
LOOP

SYSTEM 200,1:REM Video ON
END

LABEL SETBMP
 REM Put 8x8 Character
 REM arg1:x
 REM arg2:bitmap address

 VAR I,J,D
 FOR I=0 TO 7
  D=PEEK(ARGS(2)+(I AND 4)+(3-(I AND 3)))
  FOR J=0 TO 7
   IF D AND $80 THEN
    GOSUB SETP,J+ARGS(1),I
   ELSE
    GOSUB CLRP,J+ARGS(1),I
   ENDIF
   D=D<<1
  NEXT
 NEXT
RETURN

LABEL CLRBMP
 REM Clear 8x8 Character
 REM arg1:x

 VAR I,J
 FOR I=0 TO 7
  FOR J=0 TO 7
   GOSUB CLRP,J+ARGS(1),I
  NEXT
 NEXT
RETURN

LABEL SETP
 REM Set point (arg1,arg2)
 VAR P
 IF ARGS(1)<0 OR ARGS(1)>=64 THEN RETURN
 IF ARGS(2)<0 OR ARGS(2)>=8 THEN RETURN
 P=(ARGS(2)<<1)+(ARGS(1)>>5)
 VRAM(P)=VRAM(P) OR (1<<(31-(ARGS(1) AND $1F)))
RETURN

LABEL CLRP
 REM Clear point (args1,arg2)
 VAR P
 IF ARGS(1)<0 OR ARGS(1)>=64 THEN RETURN
 IF ARGS(2)<0 OR ARGS(2)>=8 THEN RETURN
 P=(ARGS(2)<<1)+(ARGS(1)>>5)
 VRAM(P)=VRAM(P) AND ((1<<(31-(ARGS(1) AND $1F))) XOR -1)
RETURN

LABEL PUTLED
 REM Output VRAM to LED
 VAR I,Y
 FOR I=0 TO 7
  Y=(I+1)<<8
  D0=Y+((VRAM(I*2  )>>24) AND $FF)
  D1=Y+((VRAM(I*2  )>>16) AND $FF)
  D2=Y+((VRAM(I*2  )>> 8) AND $FF)
  D3=Y+((VRAM(I*2  )    ) AND $FF)
  D4=Y+((VRAM(I*2+1)>>24) AND $FF)
  D5=Y+((VRAM(I*2+1)>>16) AND $FF)
  D6=Y+((VRAM(I*2+1)>> 8) AND $FF)
  D7=Y+((VRAM(I*2+1)    ) AND $FF)
  SPIWRITE D0,D1,D2,D3,D4,D5,D6,D7
 NEXT
RETURN

LABEL FONT
DATA $3C7EFFFF,$FFFF7E3C
DATA $3C7E3F1F,$1F3F7E3C
DATA $1C0E0707,$07070E1C
DATA $3C7E3F1F,$1F3F7E3C
DATA $3C7EFFFF,$FFFF7E3C
DATA $3C7EFCF8,$F8FC7E3C
DATA $3870E0E0,$E0E07038
DATA $3C7EFCF8,$F8FC7E3C

DATA $3C7EFF93,$93FFFFAB
DATA $3C7EDBFF,$9966FFA5

DATA $071A74EE,$DFDF7F0E
DATA $3C7E7A5E,$7E343C18
DATA $007EFFBF,$FDEF7E3C
DATA $0866FFFF,$FFFF7E3C
DATA $1C083C7E,$7E7E7E3C
DATA $495D7F7F,$3E2A0808
DATA $183C6E5E,$5E5EDFFF
DATA $3E261C1C,$181C0808
